apply plugin: 'application'
apply plugin: 'groovy'

group = 'com.sourceplusplus.core'
applicationName = 'source-core'
archivesBaseName = 'source-core'
mainClassName = 'com.sourceplusplus.core.CoreBootstrap'

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.4.17'
    implementation project(":api")
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'com.google.guava', name: 'guava', version: '28.2-jre'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.jetbrains', name: 'annotations', version: '19.0.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.10.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.10.3'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.1'
    implementation group: 'io.vertx', name: 'vertx-dropwizard-metrics', version: "$VERTX_VERSION"
    implementation group: 'io.vertx', name: 'vertx-web-client', version: "$VERTX_VERSION"
    implementation "io.vertx:vertx-auth-jwt:$VERTX_VERSION"
    implementation "io.vertx:vertx-web:$VERTX_VERSION"
    implementation "io.vertx:vertx-tcp-eventbus-bridge:$VERTX_VERSION"
    implementation "io.vertx:vertx-jdbc-client:$VERTX_VERSION"
    implementation group: 'io.searchbox', name: 'jest', version: '6.3.1'
    implementation group: 'net.jodah', name: 'expiringmap', version: '0.5.9'
    implementation group: 'com.h2database', name: 'h2', version: '1.4.200'
}

configurations {
    compile.exclude module: 'jackson-module-scala_2.10'
    compile.exclude module: 'log4j-over-slf4j'
}

test {
    jvmArgs '-javaagent:/home/brandon/IdeaProjects/Assistant/agent/jvm-agent/build/libs/source-agent-0.2.5_prepare.jar'

    dependsOn "buildAndMove", "startDocker", ":agent:jvm-agent:buildAgent"
    finalizedBy "stopDocker"
}

task runCore {
    dependsOn "startDocker"

    doLast {
        file("docker/local/source-core-" + version + ".zip").delete()
        file("../docker/local/source-core-" + version + ".zip").delete()
    }
}

task buildAndMove {
    dependsOn ":core:distZip"
    doLast {
        java.nio.file.Files.copy(
                file("../core/build/distributions/source-core-" + version + ".zip").toPath(),
                file("../docker/local/source-core-" + version + ".zip").toPath(),
                java.nio.file.StandardCopyOption.REPLACE_EXISTING,
                java.nio.file.StandardCopyOption.COPY_ATTRIBUTES)
    }
}

task startDocker {
    dependsOn ":composeUp"
    doFirst {
        file("docker/local/source-core-" + version + ".zip").delete()
        file("../docker/local/source-core-" + version + ".zip").delete()
    }
}
startDocker.mustRunAfter buildAndMove

task stopDocker {
    dependsOn ":composeDown"
    doLast {
        file("docker/local/source-core-" + version + ".zip").delete()
        file("../docker/local/source-core-" + version + ".zip").delete()
    }
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/source-core_build.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p['build_date'] = new Date().toInstant().toString()
            p.store w, null
        }
    }
}
classes {
    dependsOn createProperties
}
