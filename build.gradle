plugins {
    id "com.avast.gradle.docker-compose" version "0.12.1"
}

subprojects {
    if (it.name == "docs" || it.name == "plugin") return

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    group = 'com.github.sourceplusplus'

    version = '0.3.1'
    sourceCompatibility = 11
    targetCompatibility = 11

    project.ext.APACHE_SKYWALKING_VERSION = "8.0.1"
    project.ext.VERTX_VERSION = "3.9.1"

    repositories {
        mavenCentral()
        maven { url = 'https://jitpack.io' }
    }
    dependencies {
        testImplementation group: 'junit', name: 'junit', version: '4.13'
        testImplementation "io.vertx:vertx-unit:$VERTX_VERSION"

        implementation group: 'io.vertx', name: 'vertx-core', version: "$VERTX_VERSION"
        implementation group: 'io.vertx', name: 'vertx-dropwizard-metrics', version: "$VERTX_VERSION"
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
        implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
        implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
        implementation group: 'commons-io', name: 'commons-io', version: '2.7'
        compileOnly group: 'org.jetbrains', name: 'annotations', version: '19.0.0'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.11.1'
        implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.11.1'
        implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.11.1'
        implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.11.1'
        implementation group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.1.10.1'
    }

    test {
        testLogging {
            events "passed", "skipped", "failed"
            setExceptionFormat("full")

            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }
}

dockerCompose {
    useComposeFiles = ['./docker-compose.yml']
    dockerComposeWorkingDirectory = './docker/local/'
    captureContainersOutput = true
}
composeUp.dependsOn ":core:buildAndMove"
